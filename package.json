{
	"name": "suplementor",
	"version": "0.1.0",
	"private": true,
	"type": "module",
	"scripts": {
		"build": "next build",
		"check": "biome check .",
		"check:unsafe": "biome check --write --unsafe .",
		"check:write": "biome check --write .",
		"db:seed": "bun run src/lib/db/seed.ts",
		"db:reset": "bun run src/lib/db/reset.ts",
		"generate:supplement": "bun run scripts/generate-supplement-template.ts",
		"dev": "next dev --turbo",
		"preview": "next build && next start",
		"start": "next start",
		"test": "vitest",
		"test:run": "vitest run",
		"test:ui": "vitest --ui",
		"test:coverage": "vitest run --coverage",
		"test:e2e": "playwright test",
		"test:e2e:ui": "playwright test --ui",
		"test:e2e:headed": "playwright test --headed",
		"test:e2e:debug": "playwright test --debug",
		"test:e2e:chromium": "playwright test --project=chromium",
		"test:e2e:firefox": "playwright test --project=firefox",
		"test:e2e:webkit": "playwright test --project=webkit",
		"test:e2e:mobile": "playwright test --project='Mobile Chrome' --project='Mobile Safari'",
		"test:e2e:report": "playwright show-report",
		"test:all": "bun test:run && bun test:e2e",
		"typecheck": "tsc --noEmit",
		"migrate": "bun run scripts/run-migrations.ts",
		"migrate:supplements": "bun run scripts/run-migrations.ts run supplements",
		"migrate:brain-regions": "bun run scripts/run-migrations.ts run brain-regions",
		"migrate:status": "bun run scripts/run-migrations.ts status",
		"db:health": "bun run scripts/run-migrations.ts status",
		"generate:component": "bun run scripts/component-generator/index.ts",
		"generate:component:ui": "bun run scripts/component-generator/index.ts --type ui",
		"generate:component:feature": "bun run scripts/component-generator/index.ts --type feature",
		"generate:component:page": "bun run scripts/component-generator/index.ts --type page",
		"generate:component:layout": "bun run scripts/component-generator/index.ts --type layout",
		"dev:clean": "rm -rf .next && rm -rf node_modules/.cache",
		"dev:reset": "rm -rf .next && rm -rf node_modules/.cache && bun install",
		"bun:shell:setup": "echo 'Setting up Bun shell environment' && export BUN_ENV=development",
		"bun:health": "echo 'Bun version:' && bun --version && echo 'Node compatibility:' && node --version",
		"bun:performance": "time bun run build > /dev/null 2>&1 && echo 'Build performance test completed'",
		"bun:install:check": "echo 'Checking Bun install...' && ls -la bun.lock* && echo 'Lockfile present'",
		"validate:components": "bun run scripts/component-generator/index.ts --validate",
		"localization:validate": "bun run scripts/validate-localization.ts",
		"typecheck:dev": "tsc --noEmit --project tsconfig.dev.json",
		"keys:generate": "bun run scripts/generate-encryption-keys.ts generate",
		"keys:validate": "bun run scripts/generate-encryption-keys.ts validate",
		"keys:rotate": "bun run scripts/generate-encryption-keys.ts rotate",
		"dev:setup": "tsx scripts/dev-env-setup.ts",
		"storybook": "storybook dev -p 6006",
		"build-storybook": "storybook build",
		"deploy": "node scripts/deploy-optimized.js",
		"deploy:debug": "node scripts/deployment-debug.js",
		"deploy:analyze": "ANALYZE=true bun run build",
		"vercel-deploy": "vercel --prod",
		"vercel-deploy:preview": "vercel",
		"deploy:medical": "node scripts/deploy-medical.js",
		"verify:deployment": "node scripts/verify-deployment.js",
		"health:check": "curl -s https://suplementor.pl/api/health | jq .",
		"bun:serve:test": "bun run scripts/bun-server.ts",
		"bun:sqlite:setup": "bun run scripts/sqlite-init.ts",
		"bun:api:test": "bun run scripts/api-test.ts",
		"bun:runtime:info": "echo 'Bun Runtime Info:' && ulimit -n 2>/dev/null && echo 'Memory:' && free -h 2>/dev/null || echo 'System info not available'",
		"bun:optimize": "echo 'Optimizing with Bun...' && bun install --frozen-lockfile && echo 'Optimization complete'",
		"bun:dev:fast": "bun run --hot dev",
		"bun:build:analyze": "ANALYZE=true bun run build",
		"bun:preview:fast": "bun run build && bun run start",
		"bun:test:fast": "bun test --bail",
		"bun:lint:fast": "bun run check",
		"bun:sqlite:clean": "rm -f dev-database.db && echo 'SQLite database cleaned'",
		"bun:cache:clear": "rm -rf .next && rm -rf node_modules/.cache && echo 'Cache cleared'",
		"bun:full:reset": "bun run bun:cache:clear && bun install && bun run bun:sqlite:setup && echo 'Full reset complete'",
		"validate:environment": "node scripts/validate-environment.js",
		"validate:secrets": "node scripts/validate-secrets.js",
		"validate:production": "node scripts/production-readiness-checklist.js",
		"validate:medical": "node scripts/medical-compliance-verification.js",
		"audit:security": "node scripts/security-audit-report.js",
		"test:integration": "node scripts/integration-test-environment.js",
		"validate:all": "npm run validate:environment && npm run validate:secrets && npm run validate:production && npm run validate:medical",
		"deploy:validate": "npm run validate:all && npm run audit:security && npm run test:integration",
		"performance:benchmark": "bun run scripts/performance-benchmark.ts",
		"performance:analyze": "bun run scripts/performance-analysis.ts",
		"performance:report": "bun run scripts/generate-performance-report.ts",
		"db:performance": "bun run scripts/database-performance-test.ts",
		"system:health": "bun run scripts/system-health-check.ts",
		"bun:optimize": "bun run performance:analyze && bun run bun:optimize && echo 'Bun 1.3 optimizations applied'",
		"validation:polish": "bun run scripts/polish-validation.ts",
		"equilibrium:analyze": "bun run scripts/equilibrium-analysis.ts",
		"keys:generate": "node scripts/validate-secrets.js --generate-keys",
		"performance:budget": "node scripts/performance-budget.js",
		"build:optimize": "node scripts/build-optimizer.js",
		"build:validate": "npm run performance:budget && npm run build:optimize",
		"build:full": "npm run build:validate && npm run build",
		"deploy:medical": "npm run build:full && npm run deploy:validate",
		"production:verify": "node scripts/production-verification.js",
		"deploy:production": "npm run production:verify && npm run deploy:medical",
		"build:production": "npm run production:verify && npm run build:full"
	},
	"dependencies": {
		"@auth/mongodb-adapter": "^3.7.2",
		"@auth/prisma-adapter": "^2.10.0",
		"@dnd-kit/core": "^6.3.1",
		"@dnd-kit/sortable": "^10.0.0",
		"@dnd-kit/utilities": "^3.2.2",
		"@hookform/resolvers": "^5.2.2",
		"@prisma/client": "^6.16.2",
		"@radix-ui/react-accordion": "^1.2.12",
		"@radix-ui/react-avatar": "^1.1.10",
		"@radix-ui/react-checkbox": "^1.3.3",
		"@radix-ui/react-collapsible": "^1.1.12",
		"@radix-ui/react-dialog": "^1.1.15",
		"@radix-ui/react-dropdown-menu": "^2.1.16",
		"@radix-ui/react-label": "^2.1.7",
		"@radix-ui/react-navigation-menu": "^1.2.14",
		"@radix-ui/react-popover": "^1.1.15",
		"@radix-ui/react-progress": "^1.1.7",
		"@radix-ui/react-radio-group": "^1.3.8",
		"@radix-ui/react-scroll-area": "^1.2.10",
		"@radix-ui/react-select": "^2.2.6",
		"@radix-ui/react-separator": "^1.1.7",
		"@radix-ui/react-slider": "^1.3.6",
		"@radix-ui/react-slot": "^1.2.3",
		"@radix-ui/react-switch": "^1.2.6",
		"@radix-ui/react-tabs": "^1.1.13",
		"@radix-ui/react-toast": "^1.2.15",
		"@radix-ui/react-tooltip": "^1.2.8",
		"@react-three/drei": "^10.7.6",
		"@react-three/fiber": "^9.3.0",
		"@storybook/addon-essentials": "^8.6.14",
		"@storybook/addon-interactions": "^8.6.14",
		"@storybook/addon-links": "^9.1.10",
		"@storybook/blocks": "^8.6.14",
		"@storybook/nextjs": "^9.1.10",
		"@storybook/react": "^9.1.10",
		"@storybook/react-vite": "^9.1.10",
		"@storybook/test": "^8.6.14",
		"@t3-oss/env-nextjs": "^0.12.0",
		"@tanstack/react-query": "^5.69.0",
		"@tanstack/react-virtual": "^3.13.12",
		"@trpc/client": "^11.0.0",
		"@trpc/react-query": "^11.0.0",
		"@trpc/server": "^11.0.0",
		"@types/cytoscape": "^3.21.9",
		"@types/d3": "^7.4.3",
		"@vercel/analytics": "^1.5.0",
		"@vercel/speed-insights": "^1.2.0",
		"@visx/group": "^3.12.0",
		"@visx/network": "^3.12.0",
		"@visx/scale": "^3.12.0",
		"@visx/shape": "^3.12.0",
		"@visx/visx": "^3.12.0",
		"autoprefixer": "^10.4.21",
		"cheerio": "^1.1.2",
		"class-variance-authority": "^0.7.1",
		"clsx": "^2.1.1",
		"cmdk": "^1.1.1",
		"critters": "^0.0.25",
		"cytoscape": "^3.33.1",
		"d3": "^7.9.0",
		"date-fns": "^4.1.0",
		"dotenv": "^17.2.2",
		"framer-motion": "^12.23.22",
		"lodash": "^4.17.21",
		"lucide-react": "^0.544.0",
		"mongodb": "^6.12.0",
		"mongoose": "^8.8.4",
		"next": "^15.2.3",
		"next-auth": "5.0.0-beta.25",
		"next-themes": "^0.4.6",
		"p-limit": "^7.1.1",
		"prisma": "^6.16.2",
		"react": "^19.0.0",
		"react-day-picker": "^9.11.0",
		"react-dom": "^19.0.0",
		"react-force-graph": "^1.48.1",
		"react-hook-form": "^7.63.0",
		"recharts": "^3.2.1",
		"server-only": "^0.0.1",
		"sonner": "^2.0.7",
		"superjson": "^2.2.1",
		"tailwind-merge": "^3.3.1",
		"tailwindcss-animate": "^1.0.7",
		"three": "^0.180.0",
		"zod": "^3.24.2",
		"zustand": "^5.0.8",
		"@types/three": "^0.180.0",
		"cannon-es": "^0.20.0",
		"@react-three/cannon": "^6.5.1",
		"@react-three/postprocessing": "^2.16.2",
		"leva": "^0.9.35",
		"react-spring": "^10.0.3",
		"react-use-gesture": "^9.1.3",
		"react-intersection-observer": "^9.13.1",
		"gsap": "^3.12.5",
		"lottie-react": "^2.4.0",
		"react-particles": "^2.12.2",
		"tsparticles": "^3.5.0",
		"tsparticles-engine": "^2.12.0",
		"tsparticles-slim": "^2.12.0",
		"matter-js": "^0.20.0",
		"@types/matter-js": "^0.19.7",
		"react-matter-js": "^1.0.3",
		"gl-matrix": "^3.4.3"
	},
	"devDependencies": {
		"@axe-core/playwright": "^4.10.2",
		"@biomejs/biome": "1.9.4",
		"@inquirer/prompts": "^7.8.6",
		"@next/bundle-analyzer": "^15.5.4",
		"@playwright/test": "^1.55.1",
		"@tailwindcss/postcss": "^4.0.15",
		"@testing-library/jest-dom": "^6.8.0",
		"@testing-library/react": "^16.3.0",
		"@types/jsdom": "^21.1.7",
		"@types/lodash": "^4.17.20",
		"@types/node": "^20.14.10",
		"@types/react": "^19.0.0",
		"@types/react-dom": "^19.0.0",
		"@vitejs/plugin-react": "^5.0.4",
		"jsdom": "^27.0.0",
		"playwright": "^1.55.1",
		"postcss": "^8.5.3",
		"tailwindcss": "^4.0.15",
		"tsx": "^4.19.2",
		"typescript": "^5.8.2",
		"vitest": "^3.2.4"
	},
	"ct3aMetadata": {
		"initVersion": "7.39.3"
	},
	"packageManager": "bun@1.3.0"
}
